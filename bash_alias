# echo '  loading aliases'

DOTFILES_PATH='~/.configs'

alias fixbash='edit $DOTFILES_PATH'

alias atom='open -a Atom'
alias brak='open -a Brackets'
alias dev='grunt dev --connect-port='
alias docs='grunt docs'
alias edit-profile='fixbash'
alias edit='subl'
# alias edit='brak'
alias epoch='date "+%s"'
alias fetch='git fetch'
#alias flashlog='tail -f /Users/brownlee/Library/Preferences/Macromedia/Flash\ Player/Logs/flashlog.txt'
alias gcc='xcrun gcc'
alias gdd='grunt default dev'
alias gd='grunt default'
alias gr='grunt'
alias gt='grunt run-tests'
alias here='edit .'
alias i='npm i'
alias isd='npm i --save-dev'
alias is='npm i --save'
alias ip='ifconfig | grep inet\ '
alias iplan='ifconfig en3 | grep inet\ '
alias ipwifi='ifconfig en0 | grep inet\ '
alias ll='ls -lah'
alias logcat='adb logcat'
alias mnt='adb shell'
#alias ni='npm i'
alias now='date +"%m-%d-%Y %T"'
alias passgen='openssl rand -base64 32'
alias prune='git prune'
alias psrv='wsvr'
alias minty='echo "removing node_modules" && rm -r node_modules && git up && ni && grunt'
alias safp='/Users/brownlee/projects/tools/fpdebugger/standaloneplayer.app/Contents/MacOS/fp'
alias sauce='sc -u brownlee -k $SAUCE_ACCESS_KEY'
alias ssh-xddev='ssh -l xddadmin xddev.corp.adobe.com'
alias storeBgone='find . -name '*.DS_Store' -type f -delete'
alias test-time='date +%s'
alias this='here --background'
alias tw='open -a TextWrangler'
alias vox='open -a Vox'
alias wsrv='wsvr'
alias wsvr='python -m SimpleHTTPServer'

alias ni="echo 'installing via npm...'; npm install; osascript -e 'display notification \"BOOM! installed!\"'";

# navigations
alias cdcode='cd ~/Documents/code'
alias cdtools='cd ~/Documents/code/tools'
alias cdxd='cd ~/Documents/code/xd'
alias cdfoo='cd ~/Documents/code/tehfoo'
alias cdcoralui='cd ~/Documents/code/xd/coralui/packages/components'

# softwares
alias chrome='open -a /Applications/Google\ Chrome.app'
alias opendb='open -a  /Applications/Utilities/SQLite\ Database\ Browser\ 2.0\ b1.app/'

# lol kristoferjoseph
alias bitch='sudo'

# command functions
function mkcdir() {
    mkdir $1; cd $1
}

# mongo
alias upmongo='launchctl load /usr/local/opt/mongodb/homebrew.mxcl.mongodb.plist'
alias downmongo='launchctl unload /usr/local/opt/mongodb/homebrew.mxcl.mongodb.plist'

#nodefront
#alias nff='nodefront fetch'
#alias nfi='nodefront insert'
#alias nfl='nodefront compile -l'
#alias nfm='nodefront minify'

#npm
alias ninstalld='npm install --save-dev'

#git - extra short alias for .gitconfig aliases :)
alias g='git'
alias ga='g a' #add
alias gac='g ac' #add + commit -m
alias gb='g b' #branch
alias gba='g ba' #branch -a
alias gc='g c' #commit
alias gcm='g cm' #commit -m
alias gco='g co' #checkout
alias gdiff='g diff' #diff --diff-filter=ACMRTUXB
alias gnb='g nb'
alias gplm='g plm' #pull origin master
alias gpm='g pm' #push origin master
alias gpo='g p origin' #push origin ... whatevs
alias gst='g st' #status
alias unstage='g unstage'
alias nuke='git nuke'
alias glog='git log --graph --pretty="format:%C(yellow)%h%Cgreen%d%Creset %s %C(white) %an, %ar%Creset"'

# clone a repo from github; args are [orgname] [repo]
function clone {
  echo "trying git clone git@github.com:$1/$2.git"
  git clone git@github.com:$1/$2.git
}

# clone a repo from git.corp.adobe.com; args are [orgname] [repo]
function aclone {
  echo "trying git clone git@git.corp.adobe.com:$1/$2.git"
  git clone git@git.corp.adobe.com:$1/$2.git
}

# frag a named directory in all directories one level below this
# mostly used to reclaim disk space from node_modules madness
function fragFolder {

  # could just try find . -type d -maxdepth 2 -name "*$1*" -exec rm -ri {} \;
  # but this works and I like the echo messages better

  FRAG_TARGETS=`find . -type d -maxdepth 2 -name *$1*`

  if [ -z "$FRAG_TARGETS" ]
  then
    echo "No targets found."
  fi

  for target in $FRAG_TARGETS; do
    echo "fragging $target"
    rm -rf $target
  done;
}

# create a file and open it
function newfile() {
  touch $1; edit $1
}

# create a directory and change to it
function mkcdir() {
  mkdir -p "$1"; cd "$1";
}

# new terminal window at current location
function nwh() {
    osascript -e 'on run argv
        tell app "Terminal"
            do script "cd " & item 1 of argv
        end tell
    end run' `pwd`
}

function togglePhantom() {
  if [ -z "$JENKINS_URL" ]
  then
    echo "setting JENKINS_URL=1"
    export JENKINS_URL=1
  else
    echo "unset JENKINS_URL"
    unset JENKINS_URL
  fi
}

function tagpre() {   
  VERSION=$1   
  git tag -d pre   
  git push origin :refs/tags/pre || { exit 1; }   
  git tag -a pre $VERSION -m "@releng - pre tag based on $VERSION" || { exit 1; }   
  git push origin pre || { exit 1; } 
}

function releasepre() {
  VERSION=$1
  # todo: warn if modules linked
  # todo: npm install latest
  git tag -d pre
  git checkout master || { exit 1; }
  git pull origin master || { exit 1; }
  git checkout prerelease || { exit 1; }
  git pull origin prerelease || { exit 1; }
  git merge master -m '@releng - merge master into prerelease' || { exit 1; }
  npm i || { exit 1; }
  grunt release || { exit 1; } # todo: pass version here
  tagpre $VERSION || { exit 1; }
  git checkout master
}


# clone a coralui component repo, because I hate redundant typing
function coral-clone() {
  echo "trying git clone $ADOBE_GITHUB:Coral/coralui-component-$1"
  git clone $ADOBE_GITHUB:Coral/coralui-component-$1
}

# git-cheat burp some of these aliases
# so I can actually use them
alias git-cheat="open -a /Applications/Google\ Chrome.app $DOTFILES_PATH/git-cheat.md"


# markdown-cheat remind me I haz stupid
# so I can actually use them
alias markdown-cheat="open -a /Applications/Google\ Chrome.app $DOTFILES_PATH/markdown-cheat.md"
